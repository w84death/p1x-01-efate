[gd_resource type="VisualShader" load_steps=29 format=2]

[ext_resource path="res://materials/noise_512.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeScalarConstant" id=19]

constant = 0.9

[sub_resource type="VisualShaderNodeVectorOp" id=20]

operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=21]

constant = 0.2

[sub_resource type="VisualShaderNodeScalarConstant" id=22]

constant = 0.8

[sub_resource type="VisualShaderNodeVectorLen" id=23]


[sub_resource type="VisualShaderNodeVectorOp" id=24]

default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.05, 0.05, 0.05 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=25]

output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=26]


[sub_resource type="VisualShaderNodeInput" id=27]

input_name = "vertex"

[sub_resource type="VisualShaderNodeTexture" id=13]

texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=14]

input_name = "uv"

[sub_resource type="VisualShaderNodeVec3Constant" id=15]

constant = Vector3( 0.5, 0.5, 0.5 )

[sub_resource type="VisualShaderNodeVectorOp" id=16]

operator = 2

[sub_resource type="VisualShaderNodeVec3Constant" id=17]

output_port_for_preview = 0
constant = Vector3( 0.15, 0.15, 0.1 )

[sub_resource type="VisualShaderNodeScalarConstant" id=18]


[sub_resource type="VisualShaderNodeVectorOp" id=4]

default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 0.5, 2 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=5]

input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=6]

default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0.5 ) ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=7]

input_name = "normal"

[sub_resource type="VisualShaderNodeVectorOp" id=8]

operator = 2

[sub_resource type="VisualShaderNodeVectorCompose" id=9]


[sub_resource type="VisualShaderNodeVectorLen" id=10]


[sub_resource type="VisualShaderNodeVectorOp" id=11]

default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.025, 0.025, 0.025 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=12]

default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 1, 2 ) ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=1]

texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=2]

input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=3]


[resource]

code = "shader_type spatial;
render_mode world_vertex_coords;

uniform sampler2D tex_vtx_2;uniform sampler2D tex_frg_2;


void vertex() {
// Input:3
	vec3 n_out3p0;
	n_out3p0 = VERTEX;

// Input:11
	vec3 n_out11p0;
	n_out11p0 = VERTEX;

// VectorOp:12
	vec3 n_in12p1 = vec3(0.50000,0.50000,0.50000);
	vec3 n_out12p0;
	n_out12p0 = n_out11p0 * n_in12p1;

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	vec4 tex_vtx_2_read = texture( tex_vtx_2 , n_out12p0.xy );
	n_out2p0 = tex_vtx_2_read.rgb;
	n_out2p1 = tex_vtx_2_read.a;

// VectorOp:18
	vec3 n_in18p1 = vec3(2.00000,1.00000,2.00000);
	vec3 n_out18p0;
	n_out18p0 = n_out2p0 * n_in18p1;

// VectorLen:16
	float n_out16p0;
	n_out16p0 = length( n_out11p0 );

// VectorCompose:15
	vec3 n_out15p0;
	n_out15p0 = vec3( n_out16p0 , n_out16p0 , n_out16p0 );

// VectorOp:17
	vec3 n_in17p1 = vec3(0.02500,0.02500,0.02500);
	vec3 n_out17p0;
	n_out17p0 = n_out15p0 * n_in17p1;

// VectorOp:10
	vec3 n_out10p0;
	n_out10p0 = n_out18p0 * n_out17p0;

// Input:13
	vec3 n_out13p0;
	n_out13p0 = NORMAL;

// VectorOp:14
	vec3 n_out14p0;
	n_out14p0 = n_out10p0 * n_out13p0;

// VectorOp:6
	vec3 n_out6p0;
	n_out6p0 = n_out3p0 + n_out14p0;

// Output:0
	VERTEX = n_out6p0;

}

void fragment() {
// Input:3
	vec3 n_out3p0;
	n_out3p0 = vec3(UV,0.0);

// Vector:5
	vec3 n_out5p0;
	n_out5p0 = vec3(0.500000,0.500000,0.500000);

// VectorOp:6
	vec3 n_out6p0;
	n_out6p0 = n_out3p0 * n_out5p0;

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	vec4 tex_frg_2_read = texture( tex_frg_2 , n_out6p0.xy );
	n_out2p0 = tex_frg_2_read.rgb;
	n_out2p1 = tex_frg_2_read.a;

// Vector:8
	vec3 n_out8p0;
	n_out8p0 = vec3(0.150000,0.150000,0.100000);

// Input:19
	vec3 n_out19p0;
	n_out19p0 = VERTEX;

// VectorLen:15
	float n_out15p0;
	n_out15p0 = length( n_out19p0 );

// VectorCompose:18
	vec3 n_out18p0;
	n_out18p0 = vec3( n_out15p0 , n_out15p0 , n_out15p0 );

// VectorOp:16
	vec3 n_in16p1 = vec3(0.05000,0.05000,0.05000);
	vec3 n_out16p0;
	n_out16p0 = n_out18p0 * n_in16p1;

// VectorOp:17
	vec3 n_out17p0;
	n_out17p0 = n_out8p0 * n_out16p0;

// VectorOp:11
	vec3 n_out11p0;
	n_out11p0 = n_out2p0 * n_out17p0;

// Scalar:9
	float n_out9p0;
	n_out9p0 = 0.000000;

// Scalar:10
	float n_out10p0;
	n_out10p0 = 0.900000;

// Scalar:12
	float n_out12p0;
	n_out12p0 = 0.200000;

// Scalar:13
	float n_out13p0;
	n_out13p0 = 0.800000;

// Output:0
	ALBEDO = n_out11p0;
	METALLIC = n_out9p0;
	ROUGHNESS = n_out10p0;
	RIM = n_out12p0;
	RIM_TINT = n_out13p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -242.906, 53.5 )
flags/world_vertex_coords = true
nodes/vertex/0/position = Vector2( 1140, 120 )
nodes/vertex/2/node = SubResource( 1 )
nodes/vertex/2/position = Vector2( 160, 100 )
nodes/vertex/3/node = SubResource( 2 )
nodes/vertex/3/position = Vector2( 760, 60 )
nodes/vertex/6/node = SubResource( 3 )
nodes/vertex/6/position = Vector2( 940, 80 )
nodes/vertex/10/node = SubResource( 4 )
nodes/vertex/10/position = Vector2( 560, 140 )
nodes/vertex/11/node = SubResource( 5 )
nodes/vertex/11/position = Vector2( -260, 260 )
nodes/vertex/12/node = SubResource( 6 )
nodes/vertex/12/position = Vector2( -60, 200 )
nodes/vertex/13/node = SubResource( 7 )
nodes/vertex/13/position = Vector2( 580, 280 )
nodes/vertex/14/node = SubResource( 8 )
nodes/vertex/14/position = Vector2( 760, 140 )
nodes/vertex/15/node = SubResource( 9 )
nodes/vertex/15/position = Vector2( 60, 380 )
nodes/vertex/16/node = SubResource( 10 )
nodes/vertex/16/position = Vector2( -140, 400 )
nodes/vertex/17/node = SubResource( 11 )
nodes/vertex/17/position = Vector2( 280, 340 )
nodes/vertex/18/node = SubResource( 12 )
nodes/vertex/18/position = Vector2( 340, 140 )
nodes/vertex/connections = PoolIntArray( 3, 0, 6, 0, 11, 0, 12, 0, 12, 0, 2, 0, 6, 0, 0, 0, 13, 0, 14, 1, 10, 0, 14, 0, 14, 0, 6, 1, 11, 0, 16, 0, 16, 0, 15, 0, 16, 0, 15, 1, 16, 0, 15, 2, 15, 0, 17, 0, 17, 0, 10, 1, 2, 0, 18, 0, 18, 0, 10, 0 )
nodes/fragment/0/position = Vector2( 1000, 100 )
nodes/fragment/2/node = SubResource( 13 )
nodes/fragment/2/position = Vector2( 460, 20 )
nodes/fragment/3/node = SubResource( 14 )
nodes/fragment/3/position = Vector2( 20, 120 )
nodes/fragment/5/node = SubResource( 15 )
nodes/fragment/5/position = Vector2( -100, 200 )
nodes/fragment/6/node = SubResource( 16 )
nodes/fragment/6/position = Vector2( 260, 120 )
nodes/fragment/8/node = SubResource( 17 )
nodes/fragment/8/position = Vector2( 380, 220 )
nodes/fragment/9/node = SubResource( 18 )
nodes/fragment/9/position = Vector2( 740, 240 )
nodes/fragment/10/node = SubResource( 19 )
nodes/fragment/10/position = Vector2( 740, 320 )
nodes/fragment/11/node = SubResource( 20 )
nodes/fragment/11/position = Vector2( 740, 60 )
nodes/fragment/12/node = SubResource( 21 )
nodes/fragment/12/position = Vector2( 740, 400 )
nodes/fragment/13/node = SubResource( 22 )
nodes/fragment/13/position = Vector2( 740, 460 )
nodes/fragment/15/node = SubResource( 23 )
nodes/fragment/15/position = Vector2( 60, 320 )
nodes/fragment/16/node = SubResource( 24 )
nodes/fragment/16/position = Vector2( 280, 380 )
nodes/fragment/17/node = SubResource( 25 )
nodes/fragment/17/position = Vector2( 560, 260 )
nodes/fragment/18/node = SubResource( 26 )
nodes/fragment/18/position = Vector2( 80, 380 )
nodes/fragment/19/node = SubResource( 27 )
nodes/fragment/19/position = Vector2( -120, 380 )
nodes/fragment/connections = PoolIntArray( 5, 0, 6, 1, 3, 0, 6, 0, 6, 0, 2, 0, 9, 0, 0, 2, 10, 0, 0, 3, 2, 0, 11, 0, 11, 0, 0, 0, 12, 0, 0, 10, 13, 0, 0, 11, 8, 0, 17, 0, 17, 0, 11, 1, 16, 0, 17, 1, 18, 0, 16, 0, 15, 0, 18, 0, 15, 0, 18, 1, 15, 0, 18, 2, 19, 0, 15, 0 )

