[gd_resource type="VisualShader" load_steps=31 format=2]

[ext_resource path="res://materials/fire/fire_gradient.tres" type="Texture" id=1]
[ext_resource path="res://materials/noise_512.tres" type="Texture" id=2]
[ext_resource path="res://materials/fire/fire_offset_gradient.tres" type="Texture" id=3]

[sub_resource type="VisualShaderNodeScalarOp" id=1]
operator = 1

[sub_resource type="VisualShaderNodeVectorOp" id=2]
output_port_for_preview = 0
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.05, 0.1, 0.05 ) ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 0.0, 1, 0.5 ]
operator = 2

[sub_resource type="VisualShaderNodeColorOp" id=4]
output_port_for_preview = 0
operator = 4

[sub_resource type="VisualShaderNodeScalarConstant" id=5]
constant = 1.0

[sub_resource type="VisualShaderNodeScalarConstant" id=6]

[sub_resource type="VisualShaderNodeTexture" id=7]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=8]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeTexture" id=9]
output_port_for_preview = 0
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeInput" id=10]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorDecompose" id=11]

[sub_resource type="VisualShaderNodeVectorCompose" id=12]

[sub_resource type="VisualShaderNodeVectorDecompose" id=13]

[sub_resource type="VisualShaderNodeVectorCompose" id=14]

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id=16]

[sub_resource type="VisualShaderNodeScalarOp" id=17]

[sub_resource type="VisualShaderNodeVectorOp" id=18]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.5, 0.5, 0.5 ) ]
operator = 1

[sub_resource type="VisualShaderNodeScalarOp" id=19]

[sub_resource type="VisualShaderNodeTexture" id=20]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeScalarOp" id=21]

[sub_resource type="VisualShaderNodeInput" id=22]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id=23]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorCompose" id=24]

[sub_resource type="VisualShaderNodeVectorDecompose" id=25]

[sub_resource type="VisualShaderNodeTexture" id=26]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeVectorInterp" id=27]

[resource]
code = "shader_type spatial;
render_mode depth_draw_always, cull_disabled, specular_disabled, world_vertex_coords;

uniform sampler2D tex_vtx_7;uniform sampler2D tex_vtx_2;uniform sampler2D tex_frg_3;uniform sampler2D tex_frg_6;


void vertex() {
// Input:3
	vec3 n_out3p0;
	n_out3p0 = VERTEX;

// VectorDecompose:6
	float n_out6p0;
	float n_out6p1;
	float n_out6p2;
	n_out6p0 = n_out3p0.x;
	n_out6p1 = n_out3p0.y;
	n_out6p2 = n_out3p0.z;

// VectorCompose:5
	vec3 n_out5p0;
	n_out5p0 = vec3( n_out6p0 , n_out6p1 , n_out6p2 );

// Input:13
	float n_out13p0;
	n_out13p0 = TIME;

// ScalarOp:15
	float n_out15p0;
	n_out15p0 = n_out6p1 + n_out13p0;

// VectorCompose:14
	float n_in14p2 = 0.00000;
	vec3 n_out14p0;
	n_out14p0 = vec3( n_out6p0 , n_out15p0 , n_in14p2 );

// Texture:7
	vec3 n_out7p0;
	float n_out7p1;
	vec4 tex_vtx_7_read = texture( tex_vtx_7 , n_out14p0.xy );
	n_out7p0 = tex_vtx_7_read.rgb;
	n_out7p1 = tex_vtx_7_read.a;

// VectorOp:17
	vec3 n_in17p1 = vec3(0.50000,0.50000,0.50000);
	vec3 n_out17p0;
	n_out17p0 = n_out7p0 - n_in17p1;

// VectorDecompose:11
	float n_out11p0;
	float n_out11p1;
	float n_out11p2;
	n_out11p0 = n_out17p0.x;
	n_out11p1 = n_out17p0.y;
	n_out11p2 = n_out17p0.z;

// ScalarOp:18
	float n_out18p0;
	n_out18p0 = n_out6p0 + n_out11p0;

// ScalarOp:20
	float n_out20p0;
	n_out20p0 = n_out6p2 + n_out11p2;

// VectorCompose:12
	vec3 n_out12p0;
	n_out12p0 = vec3( n_out18p0 , n_out6p1 , n_out20p0 );

// Input:4
	vec3 n_out4p0;
	n_out4p0 = vec3(UV,0.0);

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	vec4 tex_vtx_2_read = texture( tex_vtx_2 , n_out4p0.xy );
	n_out2p0 = tex_vtx_2_read.rgb;
	n_out2p1 = tex_vtx_2_read.a;

// VectorInterp:8
	vec3 n_out8p0;
	n_out8p0 = mix( n_out5p0 , n_out12p0 , n_out2p0 );

// Output:0
	VERTEX = n_out8p0;

}

void fragment() {
// Input:5
	vec3 n_out5p0;
	n_out5p0 = vec3(UV,0.0);

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	vec4 tex_frg_3_read = texture( tex_frg_3 , n_out5p0.xy );
	n_out3p0 = tex_frg_3_read.rgb;
	n_out3p1 = tex_frg_3_read.a;

// VectorOp:13
	vec3 n_in13p1 = vec3(0.05000,0.10000,0.05000);
	vec3 n_out13p0;
	n_out13p0 = n_out5p0 * n_in13p1;

// VectorDecompose:8
	float n_out8p0;
	float n_out8p1;
	float n_out8p2;
	n_out8p0 = n_out13p0.x;
	n_out8p1 = n_out13p0.y;
	n_out8p2 = n_out13p0.z;

// Input:7
	float n_out7p0;
	n_out7p0 = TIME;

// ScalarOp:14
	float n_in14p1 = 0.50000;
	float n_out14p0;
	n_out14p0 = n_out7p0 * n_in14p1;

// ScalarOp:10
	float n_out10p0;
	n_out10p0 = n_out8p0 - n_out14p0;

// VectorCompose:9
	vec3 n_out9p0;
	n_out9p0 = vec3( n_out10p0 , n_out8p1 , n_out8p2 );

// Texture:6
	vec3 n_out6p0;
	float n_out6p1;
	vec4 tex_frg_6_read = texture( tex_frg_6 , n_out9p0.xy );
	n_out6p0 = tex_frg_6_read.rgb;
	n_out6p1 = tex_frg_6_read.a;

// ColorOp:15
	vec3 n_out15p0;
	{
		float base=n_out3p0.x;
		float blend=n_out6p0.x;
		if (base < 0.5) {
			n_out15p0.x = 2.0 * base * blend;
		} else {
			n_out15p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base=n_out3p0.y;
		float blend=n_out6p0.y;
		if (base < 0.5) {
			n_out15p0.y = 2.0 * base * blend;
		} else {
			n_out15p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base=n_out3p0.z;
		float blend=n_out6p0.z;
		if (base < 0.5) {
			n_out15p0.z = 2.0 * base * blend;
		} else {
			n_out15p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}

// Scalar:17
	float n_out17p0;
	n_out17p0 = 0.000000;

// Scalar:16
	float n_out16p0;
	n_out16p0 = 1.000000;

// Output:0
	ALBEDO = n_out15p0;
	ALPHA = n_out3p1;
	METALLIC = n_out17p0;
	ROUGHNESS = n_out16p0;
	TRANSMISSION = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1120.76, -315.5 )
modes/cull = 2
modes/depth_draw = 1
modes/specular = 4
flags/world_vertex_coords = true
nodes/vertex/0/position = Vector2( 1460, 140 )
nodes/vertex/2/node = SubResource( 20 )
nodes/vertex/2/position = Vector2( 960, 280 )
nodes/vertex/3/node = SubResource( 22 )
nodes/vertex/3/position = Vector2( -1160, 60 )
nodes/vertex/4/node = SubResource( 23 )
nodes/vertex/4/position = Vector2( 820, 380 )
nodes/vertex/5/node = SubResource( 24 )
nodes/vertex/5/position = Vector2( 940, 40 )
nodes/vertex/6/node = SubResource( 25 )
nodes/vertex/6/position = Vector2( -940, 60 )
nodes/vertex/7/node = SubResource( 26 )
nodes/vertex/7/position = Vector2( -180, 200 )
nodes/vertex/8/node = SubResource( 27 )
nodes/vertex/8/position = Vector2( 1220, 140 )
nodes/vertex/11/node = SubResource( 13 )
nodes/vertex/11/position = Vector2( 180, 300 )
nodes/vertex/12/node = SubResource( 14 )
nodes/vertex/12/position = Vector2( 940, 160 )
nodes/vertex/13/node = SubResource( 15 )
nodes/vertex/13/position = Vector2( -740, 360 )
nodes/vertex/14/node = SubResource( 16 )
nodes/vertex/14/position = Vector2( -380, 300 )
nodes/vertex/15/node = SubResource( 17 )
nodes/vertex/15/position = Vector2( -560, 300 )
nodes/vertex/17/node = SubResource( 18 )
nodes/vertex/17/position = Vector2( 0, 300 )
nodes/vertex/18/node = SubResource( 19 )
nodes/vertex/18/position = Vector2( 560, 120 )
nodes/vertex/20/node = SubResource( 21 )
nodes/vertex/20/position = Vector2( 560, 240 )
nodes/vertex/connections = PoolIntArray( 4, 0, 2, 0, 3, 0, 6, 0, 6, 1, 5, 1, 6, 2, 5, 2, 6, 0, 5, 0, 2, 0, 8, 2, 5, 0, 8, 0, 8, 0, 0, 0, 6, 0, 14, 0, 14, 0, 7, 0, 6, 1, 15, 0, 15, 0, 14, 1, 13, 0, 15, 1, 12, 0, 8, 1, 6, 0, 18, 0, 18, 0, 12, 0, 11, 0, 18, 1, 11, 2, 20, 1, 6, 1, 12, 1, 20, 0, 12, 2, 6, 2, 20, 0, 7, 0, 17, 0, 17, 0, 11, 0 )
nodes/fragment/0/position = Vector2( 1460, -40 )
nodes/fragment/3/node = SubResource( 7 )
nodes/fragment/3/position = Vector2( 860, -120 )
nodes/fragment/5/node = SubResource( 8 )
nodes/fragment/5/position = Vector2( -520, -40 )
nodes/fragment/6/node = SubResource( 9 )
nodes/fragment/6/position = Vector2( 860, 200 )
nodes/fragment/7/node = SubResource( 10 )
nodes/fragment/7/position = Vector2( -240, 500 )
nodes/fragment/8/node = SubResource( 11 )
nodes/fragment/8/position = Vector2( -80, 320 )
nodes/fragment/9/node = SubResource( 12 )
nodes/fragment/9/position = Vector2( 340, 320 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 160, 240 )
nodes/fragment/13/node = SubResource( 2 )
nodes/fragment/13/position = Vector2( -280, 220 )
nodes/fragment/14/node = SubResource( 3 )
nodes/fragment/14/position = Vector2( -40, 460 )
nodes/fragment/15/node = SubResource( 4 )
nodes/fragment/15/position = Vector2( 1180, -100 )
nodes/fragment/16/node = SubResource( 5 )
nodes/fragment/16/position = Vector2( 1180, 220 )
nodes/fragment/17/node = SubResource( 6 )
nodes/fragment/17/position = Vector2( 1180, 140 )
nodes/fragment/connections = PoolIntArray( 3, 1, 0, 1, 9, 0, 6, 0, 8, 0, 10, 0, 10, 0, 9, 0, 8, 1, 9, 1, 8, 2, 9, 2, 5, 0, 3, 0, 5, 0, 13, 0, 13, 0, 8, 0, 7, 0, 14, 0, 14, 0, 10, 1, 15, 0, 0, 0, 3, 0, 15, 0, 6, 0, 15, 1, 3, 0, 0, 17, 16, 0, 0, 3, 17, 0, 0, 2 )
