[gd_resource type="VisualShader" load_steps=32 format=2]

[ext_resource path="res://materials/fire/fire_noise.tres" type="Texture" id=1]
[ext_resource path="res://materials/fire/fire_gradient.tres" type="Texture" id=2]
[ext_resource path="res://materials/fire/fire_offset_gradient.tres" type="Texture" id=3]

[sub_resource type="VisualShaderNodeTexture" id=1]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeColorOp" id=2]
output_port_for_preview = 0
operator = 3

[sub_resource type="VisualShaderNodeTexture" id=3]
output_port_for_preview = 1
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 0.001 ]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=5]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorCompose" id=6]

[sub_resource type="VisualShaderNodeColorConstant" id=7]
constant = Color( 0.646791, 0.462438, 0.192999, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=8]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeInput" id=9]
input_name = "time"

[sub_resource type="VisualShaderNodeTexture" id=10]
output_port_for_preview = 0
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=11]

[sub_resource type="VisualShaderNodeScalarOp" id=12]
default_input_values = [ 0, 0.0, 1, 32.0 ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=14]

[sub_resource type="VisualShaderNodeScalarOp" id=15]

[sub_resource type="VisualShaderNodeScalarOp" id=16]

[sub_resource type="VisualShaderNodeTexture" id=17]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=18]

[sub_resource type="VisualShaderNodeScalarInterp" id=19]
default_input_values = [ 0, 0.0, 1, 0.0, 2, 0.8 ]

[sub_resource type="VisualShaderNodeScalarOp" id=20]
default_input_values = [ 0, 0.0, 1, 0.4 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarOp" id=22]

[sub_resource type="VisualShaderNodeScalarOp" id=23]
default_input_values = [ 0, 0.0, 1, 1.0 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=24]
input_name = "vertex"

[sub_resource type="VisualShaderNodeInput" id=25]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorCompose" id=26]

[sub_resource type="VisualShaderNodeVectorDecompose" id=27]

[sub_resource type="VisualShaderNodeScalarFunc" id=28]
function = 0

[resource]
code = "shader_type spatial;
render_mode cull_disabled;

uniform sampler2D tex_vtx_13;uniform sampler2D tex_vtx_18;uniform sampler2D tex_frg_4;uniform sampler2D tex_frg_11;uniform sampler2D tex_frg_13;


void vertex() {
// Input:3
	vec3 n_out3p0;
	n_out3p0 = VERTEX;

// VectorDecompose:6
	float n_out6p0;
	float n_out6p1;
	float n_out6p2;
	n_out6p0 = n_out3p0.x;
	n_out6p1 = n_out3p0.y;
	n_out6p2 = n_out3p0.z;

// Input:4
	float n_out4p0;
	n_out4p0 = TIME;

// ScalarOp:11
	float n_in11p1 = 32.00000;
	float n_out11p0;
	n_out11p0 = n_out4p0 * n_in11p1;

// ScalarOp:25
	float n_out25p0;
	n_out25p0 = n_out6p0 + n_out11p0;

// Input:24
	vec3 n_out24p0;
	n_out24p0 = vec3(UV,0.0);

// Texture:13
	vec3 n_out13p0;
	float n_out13p1;
	vec4 tex_vtx_13_read = texture( tex_vtx_13 , n_out24p0.xy );
	n_out13p0 = tex_vtx_13_read.rgb;
	n_out13p1 = tex_vtx_13_read.a;

// VectorDecompose:14
	float n_out14p0;
	float n_out14p1;
	float n_out14p2;
	n_out14p0 = n_out13p0.x;
	n_out14p1 = n_out13p0.y;
	n_out14p2 = n_out13p0.z;

// ScalarOp:17
	float n_out17p0;
	n_out17p0 = n_out25p0 + n_out14p0;

// ScalarFunc:8
	float n_out8p0;
	n_out8p0 = sin(n_out17p0);

// ScalarOp:23
	float n_in23p1 = 0.40000;
	float n_out23p0;
	n_out23p0 = n_out8p0 * n_in23p1;

// ScalarOp:16
	float n_out16p0;
	n_out16p0 = n_out6p1 + n_out23p0;

// Texture:18
	vec3 n_out18p0;
	float n_out18p1;
	vec4 tex_vtx_18_read = texture( tex_vtx_18 , n_out24p0.xy );
	n_out18p0 = tex_vtx_18_read.rgb;
	n_out18p1 = tex_vtx_18_read.a;

// VectorDecompose:19
	float n_out19p0;
	float n_out19p1;
	float n_out19p2;
	n_out19p0 = n_out18p0.x;
	n_out19p1 = n_out18p0.y;
	n_out19p2 = n_out18p0.z;

// ScalarOp:26
	float n_in26p1 = 1.00000;
	float n_out26p0;
	n_out26p0 = n_out19p1 * n_in26p1;

// ScalarInterp:21
	float n_out21p0;
	n_out21p0 = mix( n_out6p1 , n_out16p0 , n_out26p0 );

// VectorCompose:5
	vec3 n_out5p0;
	n_out5p0 = vec3( n_out6p0 , n_out21p0 , n_out6p2 );

// Output:0
	VERTEX = n_out5p0;

}

void fragment() {
// Input:2
	vec3 n_out2p0;
	n_out2p0 = vec3(UV,0.0);

// Texture:4
	vec3 n_out4p0;
	float n_out4p1;
	vec4 tex_frg_4_read = texture( tex_frg_4 , n_out2p0.xy );
	n_out4p0 = tex_frg_4_read.rgb;
	n_out4p1 = tex_frg_4_read.a;

// VectorDecompose:8
	float n_out8p0;
	float n_out8p1;
	float n_out8p2;
	n_out8p0 = n_out2p0.x;
	n_out8p1 = n_out2p0.y;
	n_out8p2 = n_out2p0.z;

// Input:3
	float n_out3p0;
	n_out3p0 = TIME;

// ScalarOp:19
	float n_out19p0;
	n_out19p0 = n_out8p0 - n_out3p0;

// VectorCompose:20
	vec3 n_out20p0;
	n_out20p0 = vec3( n_out19p0 , n_out8p1 , n_out8p2 );

// Texture:11
	vec3 n_out11p0;
	float n_out11p1;
	vec4 tex_frg_11_read = texture( tex_frg_11 , n_out20p0.xy );
	n_out11p0 = tex_frg_11_read.rgb;
	n_out11p1 = tex_frg_11_read.a;

// ColorOp:12
	vec3 n_out12p0;
	n_out12p0=max(n_out4p0,n_out11p0);

// Texture:13
	vec3 n_out13p0;
	float n_out13p1;
	vec4 tex_frg_13_read = texture( tex_frg_13 , n_out2p0.xy );
	n_out13p0 = tex_frg_13_read.rgb;
	n_out13p1 = tex_frg_13_read.a;

// Color:22
	vec3 n_out22p0;
	float n_out22p1;
	n_out22p0 = vec3(0.646791,0.462438,0.192999);
	n_out22p1 = 1.000000;

// VectorOp:23
	vec3 n_out23p0;
	n_out23p0 = n_out12p0 + n_out22p0;

// Output:0
	ALBEDO = n_out12p0;
	ALPHA = n_out13p1;
	EMISSION = n_out23p0;
	NORMAL = n_out12p0;
	TRANSMISSION = n_out12p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -153.611, 224.172 )
modes/cull = 2
nodes/vertex/0/position = Vector2( 1720, -20 )
nodes/vertex/3/node = SubResource( 24 )
nodes/vertex/3/position = Vector2( -180, 20 )
nodes/vertex/4/node = SubResource( 25 )
nodes/vertex/4/position = Vector2( -160, 140 )
nodes/vertex/5/node = SubResource( 26 )
nodes/vertex/5/position = Vector2( 1480, -20 )
nodes/vertex/6/node = SubResource( 27 )
nodes/vertex/6/position = Vector2( 540, -20 )
nodes/vertex/8/node = SubResource( 28 )
nodes/vertex/8/position = Vector2( 620, 140 )
nodes/vertex/11/node = SubResource( 12 )
nodes/vertex/11/position = Vector2( 60, 100 )
nodes/vertex/13/node = SubResource( 13 )
nodes/vertex/13/position = Vector2( 60, 260 )
nodes/vertex/14/node = SubResource( 14 )
nodes/vertex/14/position = Vector2( 240, 260 )
nodes/vertex/16/node = SubResource( 15 )
nodes/vertex/16/position = Vector2( 1000, 100 )
nodes/vertex/17/node = SubResource( 16 )
nodes/vertex/17/position = Vector2( 440, 140 )
nodes/vertex/18/node = SubResource( 17 )
nodes/vertex/18/position = Vector2( 60, 480 )
nodes/vertex/19/node = SubResource( 18 )
nodes/vertex/19/position = Vector2( 280, 380 )
nodes/vertex/21/node = SubResource( 19 )
nodes/vertex/21/position = Vector2( 1260, 140 )
nodes/vertex/23/node = SubResource( 20 )
nodes/vertex/23/position = Vector2( 800, 120 )
nodes/vertex/24/node = SubResource( 21 )
nodes/vertex/24/position = Vector2( -200, 440 )
nodes/vertex/25/node = SubResource( 22 )
nodes/vertex/25/position = Vector2( 260, 60 )
nodes/vertex/26/node = SubResource( 23 )
nodes/vertex/26/position = Vector2( 620, 300 )
nodes/vertex/connections = PoolIntArray( 3, 0, 6, 0, 5, 0, 0, 0, 4, 0, 11, 0, 13, 0, 14, 0, 6, 2, 5, 2, 6, 0, 5, 0, 6, 1, 16, 0, 18, 0, 19, 0, 21, 0, 5, 1, 6, 1, 21, 0, 16, 0, 21, 1, 23, 0, 16, 1, 24, 0, 18, 0, 24, 0, 13, 0, 11, 0, 25, 1, 6, 0, 25, 0, 8, 0, 23, 0, 25, 0, 17, 0, 14, 0, 17, 1, 17, 0, 8, 0, 26, 0, 21, 2, 19, 1, 26, 0 )
nodes/fragment/0/position = Vector2( 1660, -20 )
nodes/fragment/2/node = SubResource( 5 )
nodes/fragment/2/position = Vector2( -120, -100 )
nodes/fragment/3/node = SubResource( 9 )
nodes/fragment/3/position = Vector2( -120, 140 )
nodes/fragment/4/node = SubResource( 10 )
nodes/fragment/4/position = Vector2( 640, -100 )
nodes/fragment/8/node = SubResource( 11 )
nodes/fragment/8/position = Vector2( 60, 40 )
nodes/fragment/11/node = SubResource( 1 )
nodes/fragment/11/position = Vector2( 600, 240 )
nodes/fragment/12/node = SubResource( 2 )
nodes/fragment/12/position = Vector2( 920, -60 )
nodes/fragment/13/node = SubResource( 3 )
nodes/fragment/13/position = Vector2( 1120, 200 )
nodes/fragment/19/node = SubResource( 4 )
nodes/fragment/19/position = Vector2( 180, 260 )
nodes/fragment/20/node = SubResource( 6 )
nodes/fragment/20/position = Vector2( 380, 260 )
nodes/fragment/22/node = SubResource( 7 )
nodes/fragment/22/position = Vector2( 1220, -120 )
nodes/fragment/23/node = SubResource( 8 )
nodes/fragment/23/position = Vector2( 1420, -140 )
nodes/fragment/connections = PoolIntArray( 2, 0, 8, 0, 4, 0, 12, 0, 11, 0, 12, 1, 13, 1, 0, 1, 12, 0, 0, 17, 12, 0, 0, 7, 12, 0, 0, 0, 3, 0, 19, 1, 20, 0, 11, 0, 8, 2, 20, 2, 19, 0, 20, 0, 8, 1, 20, 1, 8, 0, 19, 0, 12, 0, 23, 0, 22, 0, 23, 1, 23, 0, 0, 5, 2, 0, 4, 0, 2, 0, 13, 0 )

